name: Release Notes

on:
  push:
    branches: [main]

jobs:
  create-release-notes:
    name: Create Release Notes
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --oneline)
          else
            COMMITS=$(git log ${LAST_TAG}..HEAD --oneline)
          fi

          # Format changelog
          CHANGELOG=$(echo "$COMMITS" | sed 's/^/- /')

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            ## üöÄ Deployed to Production

            **Commit:** ${{ github.sha }}
            **Author:** ${{ github.event.head_commit.author.name }}
            **Date:** ${{ github.event.head_commit.timestamp }}

            ### üìù Changes

            ${{ steps.changelog.outputs.changelog }}

            ### üîó Links

            - [View Diff](${{ github.event.compare }})
            - [Production Dashboard](https://app.polosaas.it)
            - [Scalingo Logs](https://dashboard.scalingo.com)

            ---

            _Deployed automatically via GitHub Actions_
          draft: false
          prerelease: false
