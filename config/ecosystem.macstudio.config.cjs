/**
 * PM2 Ecosystem per Mac Studio
 * Ottimizzato per stabilit√† e memory usage
 *
 * Features:
 * - Memory limits per processo
 * - Auto-restart intelligente
 * - Max retry policy
 * - Logs persistenti
 * - Health check integrati
 */

module.exports = {
  apps: [
    // ========================================
    // TIER 1: Core Infrastructure (CRITICAL)
    // ========================================
    {
      name: 'svc-auth',
      cwd: './svc-auth',
      script: 'npm',
      args: 'run dev',
      env: {
        NODE_ENV: 'development',
        PORT: 4001,
        DATABASE_URL: 'postgres://ewh:ewhpass@localhost:5432/ewh_master',
        REDIS_URL: 'redis://localhost:6379/0',
      },
      // Stability settings
      autorestart: true,
      max_restarts: 10,
      min_uptime: '10s',
      max_memory_restart: '512M',
      restart_delay: 3000,
      // Logs
      error_file: './logs/svc-auth-error.log',
      out_file: './logs/svc-auth-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      // Node.js options
      node_args: '--max-old-space-size=512',
      // Health check
      wait_ready: true,
      listen_timeout: 10000,
    },

    {
      name: 'svc-media',
      cwd: './svc-media',
      script: 'npm',
      args: 'run dev',
      env: {
        NODE_ENV: 'development',
        PORT: 4003,
        DATABASE_URL: 'postgres://ewh:ewhpass@localhost:5432/ewh_master',
        REDIS_URL: 'redis://localhost:6379/0',
        S3_ENDPOINT: 'http://localhost:9000',
        S3_ACCESS_KEY: 'ewh',
        S3_SECRET_KEY: 'ewhminio',
      },
      autorestart: true,
      max_restarts: 10,
      min_uptime: '10s',
      max_memory_restart: '768M',
      restart_delay: 3000,
      error_file: './logs/svc-media-error.log',
      out_file: './logs/svc-media-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=768',
      wait_ready: true,
      listen_timeout: 10000,
    },

    {
      name: 'svc-api-gateway',
      cwd: './svc-api-gateway',
      script: 'npm',
      args: 'run dev',
      env: {
        NODE_ENV: 'development',
        PORT: 4000,
        DATABASE_URL: 'postgres://ewh:ewhpass@localhost:5432/ewh_master',
        REDIS_URL: 'redis://localhost:6379/0',
        AUTH_SERVICE_URL: 'http://localhost:4001',
        MEDIA_SERVICE_URL: 'http://localhost:4003',
      },
      autorestart: true,
      max_restarts: 10,
      min_uptime: '10s',
      max_memory_restart: '512M',
      restart_delay: 3000,
      error_file: './logs/svc-api-gateway-error.log',
      out_file: './logs/svc-api-gateway-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=512',
      wait_ready: true,
      listen_timeout: 10000,
    },

    // ========================================
    // TIER 2: Business Services
    // ========================================
    {
      name: 'svc-pm',
      cwd: './svc-pm',
      script: 'npx',
      args: 'tsx watch src/index.ts',
      env: {
        NODE_ENV: 'development',
        PORT: 5500,
        DATABASE_URL: 'postgres://ewh:ewhpass@localhost:5432/ewh_master',
        REDIS_URL: 'redis://localhost:6379/0',
      },
      autorestart: true,
      max_restarts: 10,
      min_uptime: '10s',
      max_memory_restart: '768M',
      restart_delay: 3000,
      error_file: './logs/svc-pm-error.log',
      out_file: './logs/svc-pm-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=768',
      wait_ready: true,
      listen_timeout: 15000,
    },

    {
      name: 'svc-inventory',
      cwd: './svc-inventory',
      script: 'npx',
      args: 'tsx watch src/index.ts',
      env: {
        NODE_ENV: 'development',
        PORT: 6400,
        DATABASE_URL: 'postgres://ewh:ewhpass@localhost:5432/ewh_master',
      },
      autorestart: true,
      max_restarts: 10,
      min_uptime: '10s',
      max_memory_restart: '512M',
      restart_delay: 3000,
      error_file: './logs/svc-inventory-error.log',
      out_file: './logs/svc-inventory-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=512',
    },

    {
      name: 'svc-orders-purchase',
      cwd: './svc-orders-purchase',
      script: 'npx',
      args: 'tsx watch src/index.ts',
      env: {
        NODE_ENV: 'development',
        PORT: 6100,
        DATABASE_URL: 'postgres://ewh:ewhpass@localhost:5432/ewh_master',
      },
      autorestart: true,
      max_restarts: 10,
      min_uptime: '10s',
      max_memory_restart: '512M',
      restart_delay: 3000,
      error_file: './logs/svc-orders-purchase-error.log',
      out_file: './logs/svc-orders-purchase-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=512',
    },

    {
      name: 'svc-orders-sales',
      cwd: './svc-orders-sales',
      script: 'npx',
      args: 'tsx watch src/index.ts',
      env: {
        NODE_ENV: 'development',
        PORT: 6110,
        DATABASE_URL: 'postgres://ewh:ewhpass@localhost:5432/ewh_master',
      },
      autorestart: true,
      max_restarts: 10,
      min_uptime: '10s',
      max_memory_restart: '512M',
      restart_delay: 3000,
      error_file: './logs/svc-orders-sales-error.log',
      out_file: './logs/svc-orders-sales-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=512',
    },

    {
      name: 'svc-quotations',
      cwd: './svc-quotations',
      script: 'npx',
      args: 'tsx watch src/index.ts',
      env: {
        NODE_ENV: 'development',
        PORT: 6200,
        DATABASE_URL: 'postgres://ewh:ewhpass@localhost:5432/ewh_master',
      },
      autorestart: true,
      max_restarts: 10,
      min_uptime: '10s',
      max_memory_restart: '512M',
      restart_delay: 3000,
      error_file: './logs/svc-quotations-error.log',
      out_file: './logs/svc-quotations-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=512',
    },

    {
      name: 'svc-procurement',
      cwd: './svc-procurement',
      script: 'npx',
      args: 'tsx watch src/index.ts',
      env: {
        NODE_ENV: 'development',
        PORT: 6300,
        DATABASE_URL: 'postgres://ewh:ewhpass@localhost:5432/ewh_master',
      },
      autorestart: true,
      max_restarts: 10,
      min_uptime: '10s',
      max_memory_restart: '512M',
      restart_delay: 3000,
      error_file: './logs/svc-procurement-error.log',
      out_file: './logs/svc-procurement-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=512',
    },

    // ========================================
    // TIER 3: Frontend Apps
    // ========================================
    {
      name: 'app-admin-frontend',
      cwd: './app-admin-frontend',
      script: 'npm',
      args: 'run dev',
      env: {
        NODE_ENV: 'development',
        PORT: 3200,
        NEXT_PUBLIC_API_BASE_URL: 'http://localhost:4000',
      },
      autorestart: true,
      max_restarts: 5,
      min_uptime: '10s',
      max_memory_restart: '1G',
      restart_delay: 5000,
      error_file: './logs/app-admin-frontend-error.log',
      out_file: './logs/app-admin-frontend-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=1024',
      wait_ready: true,
      listen_timeout: 30000,
    },

    {
      name: 'app-pm-frontend',
      cwd: './app-pm-frontend',
      script: 'npm',
      args: 'run dev',
      env: {
        NODE_ENV: 'development',
        PORT: 3300,
        NEXT_PUBLIC_API_BASE_URL: 'http://localhost:4000',
        NEXT_PUBLIC_PM_SERVICE_URL: 'http://localhost:5500',
      },
      autorestart: true,
      max_restarts: 5,
      min_uptime: '10s',
      max_memory_restart: '1G',
      restart_delay: 5000,
      error_file: './logs/app-pm-frontend-error.log',
      out_file: './logs/app-pm-frontend-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=1024',
      wait_ready: true,
      listen_timeout: 30000,
    },

    {
      name: 'app-dam',
      cwd: './app-dam',
      script: 'npm',
      args: 'run dev',
      env: {
        NODE_ENV: 'development',
        PORT: 3400,
        NEXT_PUBLIC_API_BASE_URL: 'http://localhost:4000',
        NEXT_PUBLIC_MEDIA_SERVICE_URL: 'http://localhost:4003',
      },
      autorestart: true,
      max_restarts: 5,
      min_uptime: '10s',
      max_memory_restart: '1G',
      restart_delay: 5000,
      error_file: './logs/app-dam-error.log',
      out_file: './logs/app-dam-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=1024',
      wait_ready: true,
      listen_timeout: 30000,
    },

    {
      name: 'app-inventory-frontend',
      cwd: './app-inventory-frontend',
      script: 'npm',
      args: 'run dev',
      env: {
        NODE_ENV: 'development',
        PORT: 3500,
        NEXT_PUBLIC_API_BASE_URL: 'http://localhost:4000',
        NEXT_PUBLIC_INVENTORY_SERVICE_URL: 'http://localhost:6400',
      },
      autorestart: true,
      max_restarts: 5,
      min_uptime: '10s',
      max_memory_restart: '1G',
      restart_delay: 5000,
      error_file: './logs/app-inventory-frontend-error.log',
      out_file: './logs/app-inventory-frontend-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=1024',
      wait_ready: true,
      listen_timeout: 30000,
    },

    {
      name: 'app-cms-frontend',
      cwd: './app-cms-frontend',
      script: 'npm',
      args: 'run dev',
      env: {
        NODE_ENV: 'development',
        PORT: 3600,
        NEXT_PUBLIC_API_BASE_URL: 'http://localhost:4000',
      },
      autorestart: true,
      max_restarts: 5,
      min_uptime: '10s',
      max_memory_restart: '1G',
      restart_delay: 5000,
      error_file: './logs/app-cms-frontend-error.log',
      out_file: './logs/app-cms-frontend-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=1024',
      wait_ready: true,
      listen_timeout: 30000,
    },

    {
      name: 'app-media-frontend',
      cwd: './app-media-frontend',
      script: 'npm',
      args: 'run dev',
      env: {
        NODE_ENV: 'development',
        PORT: 3700,
        NEXT_PUBLIC_API_BASE_URL: 'http://localhost:4000',
        NEXT_PUBLIC_MEDIA_SERVICE_URL: 'http://localhost:4003',
      },
      autorestart: true,
      max_restarts: 5,
      min_uptime: '10s',
      max_memory_restart: '1G',
      restart_delay: 5000,
      error_file: './logs/app-media-frontend-error.log',
      out_file: './logs/app-media-frontend-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=1024',
      wait_ready: true,
      listen_timeout: 30000,
    },

    {
      name: 'app-box-designer',
      cwd: './app-box-designer',
      script: 'npm',
      args: 'run dev',
      env: {
        NODE_ENV: 'development',
        PORT: 3350,
        VITE_API_BASE_URL: '/api/box',
        VITE_BACKEND_URL: 'http://localhost:5850',
      },
      autorestart: true,
      max_restarts: 5,
      min_uptime: '10s',
      max_memory_restart: '1G',
      restart_delay: 5000,
      error_file: './logs/app-box-designer-error.log',
      out_file: './logs/app-box-designer-out.log',
      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
      merge_logs: true,
      node_args: '--max-old-space-size=1024',
      wait_ready: true,
      listen_timeout: 30000,
    },
  ]
};
