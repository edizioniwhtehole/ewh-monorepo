#!/bin/bash
# Script di pulizia legacy code - EWH Platform
# Sposta .backup e .DELETED in archive/legacy/

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

cd "$PROJECT_ROOT"

echo "╔══════════════════════════════════════════════════════════════╗"
echo "║           🧹 EWH PLATFORM - LEGACY CLEANUP                   ║"
echo "╚══════════════════════════════════════════════════════════════╝"
echo ""

# 1. Crea directory archive/legacy se non esiste
echo "📁 Creating archive/legacy/ directory..."
mkdir -p archive/legacy
echo "   ✅ Done"
echo ""

# 2. Trova e sposta .backup directories
echo "🗑️  Moving .backup directories..."
backup_count=0
for dir in *.backup; do
    if [ -d "$dir" ]; then
        echo "   📦 $dir → archive/legacy/$dir"
        mv "$dir" "archive/legacy/$dir"
        ((backup_count++))
    fi
done

if [ $backup_count -eq 0 ]; then
    echo "   ⏭️  No .backup directories found"
else
    echo "   ✅ Moved $backup_count .backup directories"
fi
echo ""

# 3. Trova e sposta .DELETED directories
echo "🗑️  Moving .DELETED directories..."
deleted_count=0
for dir in *.DELETED; do
    if [ -d "$dir" ]; then
        echo "   📦 $dir → archive/legacy/$dir"
        mv "$dir" "archive/legacy/$dir"
        ((deleted_count++))
    fi
done

if [ $deleted_count -eq 0 ]; then
    echo "   ⏭️  No .DELETED directories found"
else
    echo "   ✅ Moved $deleted_count .DELETED directories"
fi
echo ""

# 4. Cancella directory completamente vuote (no src/)
echo "🗑️  Checking for empty service directories..."
empty_count=0

if [ -d "svc-page-builder.backup" ]; then
    echo "   🗑️  Deleting svc-page-builder.backup (empty, no src/)"
    rm -rf "archive/legacy/svc-page-builder.backup"
    ((empty_count++))
fi

if [ $empty_count -eq 0 ]; then
    echo "   ⏭️  No empty directories to delete"
else
    echo "   ✅ Deleted $empty_count empty directories"
fi
echo ""

# 5. Aggiorna .gitignore
echo "📝 Updating .gitignore..."

# Controlla se .gitignore esiste
if [ ! -f ".gitignore" ]; then
    echo "   ⚠️  .gitignore not found, creating..."
    touch .gitignore
fi

# Aggiungi regole se non esistono già
if ! grep -q "archive/legacy/" .gitignore; then
    echo "" >> .gitignore
    echo "# Legacy code archive" >> .gitignore
    echo "archive/legacy/" >> .gitignore
    echo "*.backup" >> .gitignore
    echo "*.DELETED" >> .gitignore
    echo "   ✅ Added legacy rules to .gitignore"
else
    echo "   ⏭️  .gitignore already contains legacy rules"
fi
echo ""

# 6. Crea report di cleanup
echo "📊 Generating cleanup report..."
cat > archive/legacy/CLEANUP_REPORT.md << EOF
# Legacy Cleanup Report

**Data**: $(date +"%Y-%m-%d %H:%M:%S")
**Script**: scripts/cleanup-legacy.sh

## Items Moved to archive/legacy/

### Backup Directories ($backup_count)
$(ls -d archive/legacy/*.backup 2>/dev/null | sed 's/archive\/legacy\//- /' || echo "- None")

### Deleted Directories ($deleted_count)
$(ls -d archive/legacy/*.DELETED 2>/dev/null | sed 's/archive\/legacy\//- /' || echo "- None")

### Empty Directories Deleted ($empty_count)
- svc-page-builder.backup (no src/ directory)

## Summary

- Total items moved: $((backup_count + deleted_count))
- Total items deleted: $empty_count
- Total cleanup: $((backup_count + deleted_count + empty_count)) items

## Next Steps

1. Review archive/legacy/ contents
2. Commit changes: \`git add . && git commit -m "chore: cleanup legacy code"\`
3. Proceed with feature distribution

---

Generated by: scripts/cleanup-legacy.sh
EOF

echo "   ✅ Report created: archive/legacy/CLEANUP_REPORT.md"
echo ""

# 7. Summary
echo "══════════════════════════════════════════════════════════════"
echo "✅ CLEANUP COMPLETED"
echo "══════════════════════════════════════════════════════════════"
echo ""
echo "📊 Summary:"
echo "   - Backup directories moved: $backup_count"
echo "   - Deleted directories moved: $deleted_count"
echo "   - Empty directories deleted: $empty_count"
echo "   - Total cleanup: $((backup_count + deleted_count + empty_count)) items"
echo ""
echo "📁 Archived to: archive/legacy/"
echo "📝 Report: archive/legacy/CLEANUP_REPORT.md"
echo ""
echo "🎯 NEXT STEPS:"
echo "   1. Review: ls -la archive/legacy/"
echo "   2. Commit: git add . && git commit -m \"chore: cleanup legacy code\""
echo "   3. Continue with: CODEBASE_INVENTORY_REPORT.md"
echo ""
